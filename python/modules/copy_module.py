# Оператори присвоєння в Python не копіюють об’єкти, вони створюють прив’язки
# між метою та об’єктом. Для колекцій, які є змінними або містять змінні
# елементи, іноді потрібна копія, щоб можна було змінити одну копію,
# не змінюючи іншу. Цей модуль забезпечує загальні операції
# поверхневого та глибокого копіювання (пояснення нижче).
# Різниця між поверхневим і глибоким копіюванням актуальна лише для складених
# об’єктів (об’єктів, які містять інші об’єкти, наприклад списки чи екземпляри класу):

import copy

dicty = {
    "key_1": 18,
    "key_2": 28,
    "key_3": True,
    "key_4": 72,
    "key_5": False
}

print(dicty)

# Неглибока копія створює новий складений об’єкт, а потім (наскільки це можливо) вставляє в нього посилання на об’єкти, знайдені в оригіналі.

dicty_copy = copy.copy(dicty)

print(dicty_copy)

# Глибока копія створює новий складений об’єкт, а потім рекурсивно вставляє в нього копії об’єктів, знайдених в оригіналі.

dicty_copy_2 = copy.deepcopy(dicty)

print(dicty_copy_2)
