# Списки в списках 
# Таблиця з 4-стовпчиків/4-рядків - двовимірний масив (4х4)

table = [[":(", ":)", ":(", ":)"],
         [":)", ":(", ":)", ":)"],
         [":(", ":)", ":)", ":("],
         [":)", ":)", ":)", ":("]]
 
print(table)
print(table[0][0])  # виведе: ':('
print(table[0][3])  # виведе: ':)'
 
# Давайте заглибимося в багатовимірну природу списків. 
# Щоб знайти будь-який елемент двовимірного списку, 
# потрібно використовувати дві координати: 
# вертикальний (номер рядка) і горизонтальний (номер стовпця).
temps = [[0.0 for h in range(24)] for d in range(31)]
print(temps)

# Зараз вся матриця заповнена нулями. Можна припустити, що вона
# оновлюється автоматично за допомогою спеціальних апаратних агентів.
# Залишається лише дочекатися заповнення матриці даними вимірювань.

# Тепер настав час визначити середньомісячну температуру опівдні.
# Підсумуйте все 31 показання, зафіксовані опівдні, і розділіть суму на 31.
# Можна припустити, що спочатку зберігається температура опівночі
total = 0.0
 
for day in temps:
    total += day[11]
 
average = total / 31
 
print("Середня температура опівдні:", average)

# розуміння списків ‒ спеціальний синтаксис, який використовується в Python для заповнення великих списків.
 
squares = [x ** 2 for x in range(10)] # створює десятиелементний список, заповнений квадратами десяти цілих чисел, починаючи з нуля
print(squares)

twos = [2 ** i for i in range(8)] # створює восьмиелементний масив, що містить перші вісім степенів двійки
print(twos)

odds = [x for x in squares if x % 2 != 0 ] # формує список, який містить лише непарні елементи списку squares.
print(odds)
 

