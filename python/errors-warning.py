# Бувають ситуації, коли не можна однозначно визначити, чи відбулась помилка у програмі, чи ні.
# Начебто і виникла певна неоднозначна (виняткова) ситуація, але програма може продовжувати роботу.
# Було б непогано сповістити про цей факт користувача чи програміста, щоб він принаймі знав,
# що відбулось щось "незвичайне" і звернув на це увагу. В Python для цього є механізм так званих "попереджень".
# Це схоже на винятки: інформація про виняткову ситуацію виводиться у стандартний потік помилок,
# але програма не припиняє свою роботу. Базовим класом для попереджень є Warning, який успадковано від Exception.

# Вивести попередження найпростіше за допомогою функції warn з вбудованого модуля warnings:
# warn(message, category=UserWarning, stacklevel=1)
# message — обов'язковий параметр. Рядок-повідомлення, або екземпляр класа або підкласа Warning (у цьому випадку параметр category встановлюється автоматично).
# category — опціональний параметр, клас попередження.
# stacklevel — рівень вкладеності функцій, починаючи з якого необхідно виводити вміст стека викликів.
# Корисно, наприклад, для функцій-обгорток для вивода попереджень, де необхідно задати stacklevel=2,
# щоб попередження відносилось до місця виклику даної функції, а не самої функції.

from warnings import warn


class IncorrectNameWarning(UserWarning):
    pass


class Person:
    def __init__(self, name):
        if len(name.split()) > 3:
            warn(
                'Name format maybe incorrect:' + name,
                IncorrectNameWarning,
                stacklevel=2
            )
        self._name = name

    @property
    def name(self):
        return self._name


p = Person('Гассан Абдуррахман ібн Хоттаб')
print(p.name)
print()
p1 = Person('Еріх Марія Ремарк')
print(p1.name)
